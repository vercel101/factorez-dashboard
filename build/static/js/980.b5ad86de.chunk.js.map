{"version":3,"file":"static/js/980.b5ad86de.chunk.js","mappings":"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","sources":["component/pages_admin/Layout/Tag.jsx","component/pages_admin/Layout/products/ProductCreate.jsx"],"sourcesContent":["import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nconst Tag = ({tag, onClick}) => {\r\n  \r\n  return (\r\n    <div className='bg-[#38c65c] dark:bg-[#00000096] mb-[1px] me-[1px] text-white w-fit px-2 rounded-full flex items-center justify-betweena'>\r\n      <span>{tag}</span>\r\n      <button className='ms-2  border-s ps-2'><IoCloseSharp size={20} onClick={() => onClick()}/></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tag","import React, { useState } from \"react\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n    createProductApi,\r\n    getAllBrandApi,\r\n    getAllBrandByVendorApi,\r\n    getAllCategoryApi,\r\n    getAllColorApi,\r\n    getAllVentorApi,\r\n} from \"../../../../apis/adminApis\";\r\nimport {\r\n    spinnerOverlayOffFn,\r\n    spinnerOverlayOnFn,\r\n} from \"../../../../Redux/ReducerAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Tag from \"../Tag\";\r\nimport { BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { LuEye } from \"react-icons/lu\";\r\nimport { MdOutlinePlaylistAdd, MdDeleteForever } from \"react-icons/md\";\r\nimport { BiChevronDown } from \"react-icons/bi\";\r\nimport {\r\n    AsyncCreatableSelect,\r\n    AsyncSelect,\r\n    CreatableSelect,\r\n    Select,\r\n    useChakraSelectProps,\r\n} from \"chakra-react-select\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\n\r\nconst ProductCreate = ({ userInfoReducer, tokenReducer }) => {\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [thumbnailImg, setThumbnail] = useState(null);\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(null);\r\n    const [imgOrLink, setImgOrLink] = useState(false);\r\n    const [multipleImages, setMultipleImages] = useState({\r\n        urls: [],\r\n        files: \"\",\r\n        singleImageUrl: \"\",\r\n    });\r\n    const [catData, setCatData] = useState([]);\r\n    const [categoryIdx, setCategoryIdx] = useState(null);\r\n    const [brandData, setBrandData] = useState([]);\r\n    const [filteredBrandData, setFilteredBrandData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [vendorData, setVendorData] = useState([]);\r\n    const [productMargin, setProductMargin] = useState(0);\r\n    const [sellingGst, setSellingGst] = useState(0);\r\n    const [brandIdx, setBrandIdx] = useState(null);\r\n    const [tagInputString, setTagInputString] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [productField, setProductField] = useState({\r\n        product_name: \"\",\r\n        sku_code: \"\",\r\n        hsn_code: \"\",\r\n        brandId: \"\",\r\n        color: \"\",\r\n        categoryId: \"\",\r\n        subCatId: \"\",\r\n        stockStatus: \"In_stock\",\r\n        lotSizeQty: [],\r\n        mrp: 0,\r\n        seller_price: 0,\r\n        gst: 0,\r\n        qty_in_hand: 0,\r\n        min_order_qty: 0,\r\n        sole: \"\",\r\n        material: \"\",\r\n        packing_type: \"\",\r\n        made_in: \"India\",\r\n        weight: \"\",\r\n        description: \"\",\r\n    });\r\n    const [selectedColor, setSelectedColor] = useState({\r\n        colorName: \"\",\r\n        colorHex: \"\",\r\n        color_id: \"\",\r\n    });\r\n    const [metaData, setMetaData] = useState({\r\n        metaTitle: \"\",\r\n        metaKeyword: \"\",\r\n        metaDescription: \"\",\r\n    });\r\n    const [vendorid, setVendorid] = useState(\"\");\r\n    const [bestSellingNewArrival, setBestSellingNewArrival] = useState({\r\n        bestSelling: false,\r\n        newArrival: false,\r\n    });\r\n    const vendorSelectChange = (el) => {\r\n        setVendorid(el);\r\n        let x = brandData.filter((o) => o.vendor_id._id === el.value);\r\n        setFilteredBrandData((old) => x);\r\n        setProductMargin((old) => el.margin);\r\n    };\r\n    const selectProps = useChakraSelectProps({\r\n        value: vendorid,\r\n        onChange: vendorSelectChange,\r\n    });\r\n    const inputFn = () => {\r\n        document.getElementById(\"thumbnailInput\").click();\r\n    };\r\n    const options = document.querySelectorAll(\"li\");\r\n    for (let i = 0; i < options.length; i++) {\r\n        options[i].onclick = () => {\r\n            document.activeElement.blur();\r\n        };\r\n    }\r\n\r\n    const handleThumbUpload = (e) => {\r\n        if (e.target.files) {\r\n            setThumbnail(e.target.files[0]);\r\n        } else {\r\n            setThumbnailUrl(e.target.value);\r\n        }\r\n    };\r\n    const setImgFn = () => {\r\n        if (imgOrLink && thumbnailUrl !== null) {\r\n            if (thumbnailUrl.slice(0, 4).toLocaleLowerCase() === \"http\") {\r\n                setThumbnail(thumbnailUrl);\r\n            } else {\r\n                toast({\r\n                    title: \"Please provide a valid image url\",\r\n                    position: \"top\",\r\n                    status: \"warning\",\r\n                    isClosable: true,\r\n                });\r\n                setThumbnailUrl(\"\");\r\n            }\r\n        }\r\n    };\r\n    const toggleBtn = (flag) => {\r\n        setImgOrLink(flag);\r\n        setThumbnail(null);\r\n        setThumbnailUrl(null);\r\n    };\r\n    const brandHandler = (index) => {\r\n        if (index > 0) {\r\n            setBrandIdx(index - 1);\r\n        } else {\r\n            setBrandIdx(null);\r\n        }\r\n    };\r\n    const categoryHandler = (index) => {\r\n        if (index > 0) {\r\n            setCategoryIdx(index - 1);\r\n        } else {\r\n            setCategoryIdx(null);\r\n        }\r\n    };\r\n\r\n    const getAllBrands = async () => {\r\n        if (userInfoReducer.userType === \"Seller\") {\r\n            await getAllBrandByVendorApi(userInfoReducer.vendorId, tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setFilteredBrandData(res.data.data);\r\n                    setBrandData(res.data.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            await getAllBrandApi(tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setBrandData(res.data.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n    const getAllCategory = async () => {\r\n        console.log(\"get all category fired\");\r\n        dispatch(spinnerOverlayOnFn());\r\n        await getAllCategoryApi()\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setCatData(res.data.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        dispatch(spinnerOverlayOffFn());\r\n    };\r\n    const getAllVendors = async () => {\r\n        if (\r\n            userInfoReducer.userType === \"Admin\" ||\r\n            userInfoReducer.userType === \"Super Admin\"\r\n        ) {\r\n            dispatch(spinnerOverlayOnFn());\r\n            await getAllVentorApi(tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    let arr = [];\r\n                    for (let resD of res.data.data) {\r\n                        if (\r\n                            resD.marginInPercentage &&\r\n                            resD.marginInPercentage > 0\r\n                        ) {\r\n                            arr.push({\r\n                                label: resD.firmName,\r\n                                value: resD._id,\r\n                                margin: resD.marginInPercentage,\r\n                            });\r\n                        }\r\n                    }\r\n                    console.log(arr);\r\n                    setVendorData(arr);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            dispatch(spinnerOverlayOffFn());\r\n        }\r\n    };\r\n    const callDemo = () => {\r\n        console.log(\"call demo\");\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            setTags((preState) => {\r\n                return [...preState, tagInputString];\r\n            });\r\n            setTagInputString(\"\");\r\n        }\r\n    };\r\n\r\n    const addProductFn = async () => {\r\n        productField.lotSizeQty = tags;\r\n        if (filteredBrandData[brandIdx]) {\r\n            productField.brandId = filteredBrandData[brandIdx]._id;\r\n        }\r\n        if (catData[categoryIdx]) {\r\n            productField.categoryId = catData[categoryIdx]._id;\r\n        }\r\n        if (selectedColor.colorHex !== \"\" && selectedColor.colorName !== \"\") {\r\n            productField.color = selectedColor.color_id;\r\n        }\r\n\r\n        let formData = new FormData();\r\n        for (let productKey in productField) {\r\n            if (productKey === \"lotSizeQty\") {\r\n                formData.append(\r\n                    productKey,\r\n                    JSON.stringify(productField[productKey])\r\n                );\r\n            } else {\r\n                formData.append(productKey, productField[productKey]);\r\n            }\r\n        }\r\n        formData.append(\"thumbnail\", thumbnailImg);\r\n        if (multipleImages.files.length > 0) {\r\n            for (let val of multipleImages.files) {\r\n                console.log(val);\r\n                formData.append(\"mulImg\", val);\r\n            }\r\n        } else if (multipleImages.urls.length > 0) {\r\n            for (let val of multipleImages.urls) {\r\n                console.log(val);\r\n                formData.append(\"mulImg\", val);\r\n            }\r\n        }\r\n        formData.append(\"meta\", JSON.stringify(metaData));\r\n        if (\r\n            userInfoReducer.userType === \"Admin\" ||\r\n            userInfoReducer.userType === \"Super Admin\"\r\n        ) {\r\n            if (productMargin > 0 && sellingGst > 0) {\r\n                formData.append(\"margin\", productMargin);\r\n                formData.append(\"sellingGST\", sellingGst);\r\n                formData.append(\"vendor_id\", vendorid.value);\r\n                formData.append(\"best_arrival\",JSON.parse(bestSellingNewArrival));\r\n                dispatch(spinnerOverlayOnFn());\r\n                await createProductApi(formData, tokenReducer)\r\n                    .then((res) => {\r\n                        console.log(res.data);\r\n                        toast({\r\n                            title: \"Product Created Successfully\",\r\n                            position: \"top\",\r\n                            status: \"success\",\r\n                            isClosable: true,\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        toast({\r\n                            title: \"Error\",\r\n                            description: err.response.data.message,\r\n                            position: \"top\",\r\n                            status: \"error\",\r\n                            isClosable: true,\r\n                        });\r\n                    });\r\n                dispatch(spinnerOverlayOffFn());\r\n            } else {\r\n                toast({\r\n                    title: \"Margin and selling gst are required\",\r\n                    position: \"top\",\r\n                    status: \"warning\",\r\n                    isClosable: true,\r\n                });\r\n            }\r\n        } else {\r\n            dispatch(spinnerOverlayOnFn());\r\n            await createProductApi(formData, tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    toast({\r\n                        title: \"Product Created Successfully\",\r\n                        position: \"top\",\r\n                        status: \"success\",\r\n                        isClosable: true,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    toast({\r\n                        title: \"Error\",\r\n                        description: err.response.data.message,\r\n                        position: \"top\",\r\n                        status: \"error\",\r\n                        isClosable: true,\r\n                    });\r\n                });\r\n            dispatch(spinnerOverlayOffFn());\r\n        }\r\n    };\r\n\r\n    const cancelProductFn = () => {\r\n        if (window.confirm(\"Are you want to cancel this product\")) {\r\n            setProductField({\r\n                product_name: \"\",\r\n                sku_code: \"\",\r\n                hsn_code: \"\",\r\n                brandId: \"\",\r\n                color: \"\",\r\n                categoryId: \"\",\r\n                subCatId: \"\",\r\n                stockStatus: \"In_stock\",\r\n                lotSizeQty: [],\r\n                mrp: 0,\r\n                gst: 0,\r\n                seller_price: 0,\r\n                qty_in_hand: 0,\r\n                min_order_qty: 0,\r\n                sole: \"\",\r\n                material: \"\",\r\n                packing_type: \"\",\r\n                made_in: \"\",\r\n                weight: \"\",\r\n                description: \"\",\r\n            });\r\n            setSellingGst((old) => 0);\r\n            setProductMargin((old) => 0);\r\n            setBestSellingNewArrival({ bestSelling: false, newArrival: false });\r\n            setBrandIdx((old) => null);\r\n            setCategoryIdx((old) => null);\r\n            setMultipleImages({\r\n                urls: [],\r\n                files: \"\",\r\n                singleImageUrl: \"\",\r\n            });\r\n            setMetaData({\r\n                metaTitle: \"\",\r\n                metaKeyword: \"\",\r\n                metaDescription: \"\",\r\n            });\r\n            setVendorid(\"\");\r\n        }\r\n    };\r\n\r\n    const getAllColor = async () => {\r\n        dispatch(spinnerOverlayOnFn());\r\n        await getAllColorApi()\r\n            .then((res) => {\r\n                setColorData(res.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert(\"Error occurred!\");\r\n            });\r\n        dispatch(spinnerOverlayOffFn());\r\n    };\r\n\r\n    const removeTag = (index) => {\r\n        let arr;\r\n        setTags((old) => {\r\n            arr = [...old];\r\n            arr.splice(index, 1);\r\n            return arr;\r\n        });\r\n        console.log(\"first\");\r\n    };\r\n    const multipleImagehandler = (method, index) => {\r\n        if (method === \"DEL\") {\r\n            let arr = [];\r\n            setMultipleImages((old) => {\r\n                arr = old.urls;\r\n                arr.splice(index, 1);\r\n                return { urls: arr, files: \"\", singleImageUrl: \"\" };\r\n            });\r\n        } else if (method === \"ADD\") {\r\n            if (\r\n                multipleImages.singleImageUrl\r\n                    .slice(0, 4)\r\n                    .toLocaleLowerCase() === \"http\"\r\n            ) {\r\n                let arr = [];\r\n                setMultipleImages((old) => {\r\n                    arr = old.urls;\r\n                    arr.push(old.singleImageUrl);\r\n                    return { urls: arr, files: \"\", singleImageUrl: \"\" };\r\n                });\r\n            } else {\r\n                alert(\"Please provide a valid image url\");\r\n                let arr = [];\r\n                setMultipleImages((old) => {\r\n                    arr = old.urls;\r\n                    return { urls: arr, files: \"\", singleImageUrl: \"\" };\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(userInfoReducer)\r\n        getAllBrands();\r\n        getAllCategory();\r\n        getAllVendors();\r\n        getAllColor();\r\n        setTags([]);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            <div className=\"flex-1 me-24\">\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div className={`col-span-2`}>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Product Name\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Product Name\"\r\n                            value={productField.product_name}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        product_name: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            SKU code\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"SKU code\"\r\n                            value={productField.sku_code}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, sku_code: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            HSN code\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"HSN code\"\r\n                            value={productField.hsn_code}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, hsn_code: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Brand\r\n                        </h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(e) =>\r\n                                brandHandler(e.target.selectedIndex)\r\n                            }\r\n                            className=\"outline-none rounded-md border px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"\">Select Brand</option>\r\n                            {filteredBrandData.length > 0 &&\r\n                                filteredBrandData.map((el, i) => (\r\n                                    <option\r\n                                        key={`${el._id}`}\r\n                                        value={el.brand_name}\r\n                                    >\r\n                                        {el.brand_name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Color\r\n                        </h1>\r\n                        <div\r\n                            tabIndex=\"0\"\r\n                            className=\"group relative inline-block w-full\"\r\n                        >\r\n                            <button className=\"focus:outline-none border py-2 ps-2 w-full flex justify-between items-center bg-white rounded-md dark:bg-[#424242] dark:border-[#424242] text-start\">\r\n                                {selectedColor.colorName !== \"\"\r\n                                    ? selectedColor.colorName\r\n                                    : \"Select Color\"}\r\n                                <BiChevronDown size={20} />\r\n                            </button>\r\n                            <div className=\"hidden group-focus-within:block w-[230px] items-center dark:border-neutral-500 rounded-md p-1 list-none absolute border dark:bg-teal-800 bg-teal-50 right-0 top-10 z-1 shadow-lg animate-slideIn\">\r\n                                <ul>\r\n                                    {colorData.length > 0 &&\r\n                                        colorData.map((el, i) => (\r\n                                            <li\r\n                                                key={el._id}\r\n                                                className={`flex justify-start items-center h-[50px] mb-2 cursor-pointer border`}\r\n                                                onClick={() =>\r\n                                                    setSelectedColor({\r\n                                                        colorName: el.colorName,\r\n                                                        colorHex: el.colorHex,\r\n                                                        color_id: el._id,\r\n                                                    })\r\n                                                }\r\n                                            >\r\n                                                <div\r\n                                                    className={`h-full w-1/2 flex justify-center items-center border`}\r\n                                                    style={{\r\n                                                        backgroundColor:\r\n                                                            el.colorHex,\r\n                                                    }}\r\n                                                >\r\n                                                    {el.colorHex}\r\n                                                </div>\r\n                                                <div className={`ms-3`}>\r\n                                                    {el.colorName}\r\n                                                </div>\r\n                                            </li>\r\n                                        ))}\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-3 gap-4 mb-8\">\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Category\r\n                        </h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(e) =>\r\n                                categoryHandler(e.target.selectedIndex)\r\n                            }\r\n                            className=\"outline-none border rounded-md px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"\">Select Category</option>\r\n                            {catData.length > 0 &&\r\n                                catData.map((el, i) => (\r\n                                    <option value=\"\" key={el._id}>\r\n                                        {el.category_name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Sub Category\r\n                        </h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(e) =>\r\n                                setProductField((preState) => {\r\n                                    return {\r\n                                        ...preState,\r\n                                        subCatId: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"\">Select SubCategory</option>\r\n                            {categoryIdx !== null &&\r\n                                catData[categoryIdx].sub_category.map((el) => (\r\n                                    <option value={el._id} key={el._id}>\r\n                                        {el.subcategory_name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Stock status\r\n                        </h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            value={productField.stockStatus}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        stockStatus: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"In_stock\">In Stock</option>\r\n                            <option value=\"Out_of_stock\">Out Off Stock</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                        Lot Size / Quantity\r\n                    </h1>\r\n                    <div className=\"rounded-md bg-white p-2 w-full mb-8 border dark:bg-[#424242] dark:border-[#424242] flex flex-wrap\">\r\n                        {tags.map((e, i) => (\r\n                            <Tag\r\n                                key={`${i}_tags`}\r\n                                tag={e}\r\n                                onClick={() => removeTag(i)}\r\n                            />\r\n                        ))}\r\n                        <input\r\n                            type=\"text\"\r\n                            value={tagInputString}\r\n                            className=\"outline-none flex-1 ps-1 dark:bg-[#424242]\"\r\n                            placeholder={\r\n                                tags.length === 0 &&\r\n                                \"insert size and press enter\"\r\n                            }\r\n                            onChange={(e) => setTagInputString(e.target.value)}\r\n                            onKeyDown={handleKeyDown}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            MRP\r\n                        </h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"MRP\"\r\n                            value={productField.mrp}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, mrp: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Seller Price\r\n                        </h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Seller Price\"\r\n                            value={productField.seller_price}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        seller_price: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Seller GST in %\r\n                        </h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"GST in %\"\r\n                            value={productField.gst}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, gst: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Total\r\n                        </h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            disabled={true}\r\n                            placeholder=\"Selling Price\"\r\n                            value={(\r\n                                Number(productField.seller_price) +\r\n                                (Number(productField.seller_price) *\r\n                                    Number(productField.gst)) /\r\n                                    100\r\n                            ).toFixed(2)}\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    {userInfoReducer.userType === \"Admin\" ||\r\n                        (userInfoReducer.userType === \"Super Admin\" && (\r\n                            <>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                        Vendor margin\r\n                                    </h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Margin\"\r\n                                        value={productMargin}\r\n                                        onChange={(e) =>\r\n                                            setProductMargin(\r\n                                                (old) => e.target.value\r\n                                            )\r\n                                        }\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                        Margin + Seller Price\r\n                                    </h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Margin\"\r\n                                        value={\r\n                                            Number(productField.seller_price) +\r\n                                            (Number(productField.seller_price) *\r\n                                                Number(productMargin)) /\r\n                                                100\r\n                                        }\r\n                                        disabled={true}\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                        Selling GST in %\r\n                                    </h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Selling GST\"\r\n                                        value={sellingGst}\r\n                                        onChange={(e) =>\r\n                                            setSellingGst(\r\n                                                (old) => e.target.value\r\n                                            )\r\n                                        }\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                        Total Selling Price\r\n                                    </h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Margin\"\r\n                                        disabled={true}\r\n                                        value={(\r\n                                            Number(productField.seller_price) +\r\n                                            (Number(productField.seller_price) *\r\n                                                Number(productMargin)) /\r\n                                                100 +\r\n                                            ((Number(\r\n                                                productField.seller_price\r\n                                            ) +\r\n                                                (Number(\r\n                                                    productField.seller_price\r\n                                                ) *\r\n                                                    Number(productMargin)) /\r\n                                                    100) *\r\n                                                Number(sellingGst)) /\r\n                                                100\r\n                                        ).toFixed(2)}\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        ))}\r\n                    {/* <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Selling Price</h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            disabled={true}\r\n                            placeholder=\"Selling Price\"\r\n                            value={productField.selling_price}\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Final Price(incl. GST)</h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Final Price(incl. GST)\"\r\n                            disabled={true}\r\n                            value={Number(productField.seller_price) + ((Number(productField.seller_price) * Number(productField.gst))/100)}\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div> */}\r\n\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            QTY in hand\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"QTY in hand\"\r\n                            value={productField.qty_in_hand}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        qty_in_hand: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Minimum Order QTY\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Minimum Order QTY\"\r\n                            value={productField.min_order_qty}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        min_order_qty: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Sole\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Sole\"\r\n                            value={productField.sole}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, sole: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Material\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"material\"\r\n                            value={productField.material}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, material: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Packing type\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Packing type\"\r\n                            value={productField.packing_type}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        packing_type: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Made in\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Made in\"\r\n                            value={productField.made_in}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, made_in: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Weight\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Weight\"\r\n                            value={productField.weight}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, weight: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none rounded-md border p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                    Description\r\n                </h1>\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder=\"summary for product\"\r\n                    value={productField.description}\r\n                    onChange={(e) =>\r\n                        setProductField((old) => {\r\n                            return { ...old, description: e.target.value };\r\n                        })\r\n                    }\r\n                    className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                />\r\n                <div className=\"p-4 rounded-md bg-[#adffd5] dark:bg-[#0a110d70] mb-8\">\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Meta Title\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Meta Title\"\r\n                            value={metaData.metaTitle}\r\n                            onChange={(e) =>\r\n                                setMetaData((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        metaTitle: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Meta Keywords\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Meta  Keywords\"\r\n                            value={metaData.metaKeyword}\r\n                            onChange={(e) =>\r\n                                setMetaData((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        metaKeyword: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                            Meta Description\r\n                        </h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Meta Description\"\r\n                            value={metaData.metaDescription}\r\n                            onChange={(e) =>\r\n                                setMetaData((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        metaDescription: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center justify-start\">\r\n                    <button\r\n                        className=\"bg-[#4BC970] rounded-md border border-[#4BC970] px-3 py-2 text-white font-bold text-lg\"\r\n                        onClick={() => addProductFn()}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                    <button\r\n                        className=\"bg-[#ffffff] rounded-md px-3 py-2 ms-3 border border-[#4BC970] text-[#384047] font-bold text-lg\"\r\n                        onClick={() => cancelProductFn()}\r\n                    >\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* -------------------------------- Right side container -------------------------------- */}\r\n\r\n            <div className=\"w-[30%]\">\r\n                {(userInfoReducer.userType &&\r\n                    userInfoReducer.userType === \"Admin\") ||\r\n                    (userInfoReducer.userType === \"Super Admin\" && (\r\n                        <div className=\"p-4 rounded-md bg-[#adffd5] dark:bg-[#0a110d70] mb-8\">\r\n                            <div>\r\n                                <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                    Select Vendor\r\n                                </h1>\r\n                                <Select\r\n                                    className=\"bg-white\"\r\n                                    {...selectProps}\r\n                                    options={vendorData}\r\n                                />\r\n                            </div>\r\n                            <div className=\"border p-3 mt-5 bg-white rounded-md dark:bg-[#424242] dark:border-[#424242]\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                        Show in Best Selling\r\n                                    </h1>\r\n                                    <label\r\n                                        htmlFor=\"bestSelling\"\r\n                                        className=\"flex items-center\"\r\n                                    >\r\n                                        <span className=\"mx-1 px-3 font-bold text-blue-600 dark:text-yellow-300\">\r\n                                            {bestSellingNewArrival.bestSelling\r\n                                                ? \"Yes\"\r\n                                                : \"No\"}\r\n                                        </span>\r\n                                        <div className=\"relative\">\r\n                                            <input\r\n                                                id=\"bestSelling\"\r\n                                                type=\"checkbox\"\r\n                                                className=\"hidden\"\r\n                                                value={\r\n                                                    bestSellingNewArrival.bestSelling\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    setBestSellingNewArrival(\r\n                                                        (prev) => {\r\n                                                            return {\r\n                                                                ...prev,\r\n                                                                bestSelling:\r\n                                                                    e.target\r\n                                                                        .checked,\r\n                                                            };\r\n                                                        }\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                            <div className=\"toggle__line w-12 h-6 bg-gray-200 rounded-full shadow-inner\"></div>\r\n                                            <div className=\"toggle__dot absolute w-5 h-5 bg-white rounded-full shadow inset-y-0 left-0\"></div>\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"mt-2 flex items-center justify-between\">\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">\r\n                                        Show in New Arrivals\r\n                                    </h1>\r\n                                    <label\r\n                                        htmlFor=\"newArrivals\"\r\n                                        className=\"flex items-center\"\r\n                                    >\r\n                                        <span className=\"mx-1 px-3 font-bold text-blue-600 dark:text-yellow-300\">\r\n                                            {bestSellingNewArrival.newArrival\r\n                                                ? \"Yes\"\r\n                                                : \"No\"}\r\n                                        </span>\r\n                                        <div className=\"relative\">\r\n                                            <input\r\n                                                id=\"newArrivals\"\r\n                                                type=\"checkbox\"\r\n                                                className=\"hidden\"\r\n                                                value={\r\n                                                    bestSellingNewArrival.newArrival\r\n                                                }\r\n                                                onChange={(e) =>\r\n                                                    setBestSellingNewArrival(\r\n                                                        (prev) => {\r\n                                                            return {\r\n                                                                ...prev,\r\n                                                                newArrival:\r\n                                                                    e.target\r\n                                                                        .checked,\r\n                                                            };\r\n                                                        }\r\n                                                    )\r\n                                                }\r\n                                            />\r\n                                            <div className=\"toggle__line w-12 h-6 bg-gray-200 rounded-full shadow-inner\"></div>\r\n                                            <div className=\"toggle__dot absolute w-5 h-5 bg-white rounded-full shadow inset-y-0 left-0\"></div>\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div>\r\n                    <div className=\"flex items-center justify-center w-full mb-12\">\r\n                        <label\r\n                            htmlFor=\"toggleB\"\r\n                            className=\"flex items-center cursor-pointer\"\r\n                        >\r\n                            <div className=\"me-3 text-[#384047] font-medium dark:text-white\">\r\n                                Image\r\n                            </div>\r\n                            <div className=\"relative\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    defaultChecked={imgOrLink}\r\n                                    id=\"toggleB\"\r\n                                    className=\"sr-only\"\r\n                                    onClick={(e) => toggleBtn(e.target.checked)}\r\n                                />\r\n\r\n                                <div className=\"block bg-gray-600 w-14 h-8 rounded-full\"></div>\r\n\r\n                                <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\"></div>\r\n                            </div>\r\n                            <div className=\"ml-3 text-[#384047] font-medium dark:text-white\">\r\n                                Link\r\n                            </div>\r\n                        </label>\r\n                    </div>\r\n                    <div\r\n                        className=\" border-dashed border-4 py-8 cursor-pointer px-4\"\r\n                        onClick={() => inputFn()}\r\n                    >\r\n                        {thumbnailImg && (\r\n                            <img\r\n                                src={\r\n                                    imgOrLink\r\n                                        ? thumbnailImg\r\n                                        : URL.createObjectURL(thumbnailImg)\r\n                                }\r\n                                alt=\"\"\r\n                                title=\"thumbnail Image\"\r\n                            />\r\n                        )}\r\n\r\n                        <div>\r\n                            <div\r\n                                className={`${\r\n                                    thumbnailImg === null && !imgOrLink\r\n                                        ? \"flex\"\r\n                                        : \"hidden\"\r\n                                } flex-col justify-center items-center`}\r\n                            >\r\n                                <FaCloudUploadAlt\r\n                                    size={150}\r\n                                    className=\"w-full text-[#683aff]\"\r\n                                />\r\n                                <span className=\"bg-[#683affbd] text-white font-semibold p-3 rounded-md\">\r\n                                    Upload a product thumbnail\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"flex justify-center items-center mt-1 w-full\">\r\n                                <input\r\n                                    type={`${imgOrLink ? \"text\" : \"file\"}`}\r\n                                    id=\"thumbnailInput\"\r\n                                    onChange={(e) => handleThumbUpload(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`${\r\n                                        !imgOrLink && \"hidden\"\r\n                                    } outline-none border py-1 w-full dark:bg-[#424242] dark:border-[#424242] px-2`}\r\n                                />\r\n                                <button\r\n                                    className={`${\r\n                                        !imgOrLink && \"hidden\"\r\n                                    } bg-[#683aff] text-white font-semibold px-2 py-1 border border-[#683aff] dark:border-[#424242]`}\r\n                                    onClick={() => setImgFn()}\r\n                                >\r\n                                    upload\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <span className=\"mb-1\">Multiple Images</span>\r\n                    <div>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            multiple\r\n                            className=\"border border-green-500 w-full\"\r\n                            onChange={(e) =>\r\n                                setMultipleImages({\r\n                                    urls: [],\r\n                                    files: e.target.files,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center my-3\">\r\n                        <div className=\"border-b-2 w-full me-2\"></div>\r\n                        <span className=\"text-xs text-blue-500\">OR</span>\r\n                        <div className=\"border-b-2 w-full ms-2\"></div>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"outline-none border border-green-500 w-full p-1\"\r\n                            placeholder=\"Image URL\"\r\n                            value={multipleImages.singleImageUrl}\r\n                            onChange={(e) =>\r\n                                setMultipleImages((preState) => {\r\n                                    return {\r\n                                        ...preState,\r\n                                        singleImageUrl: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                        />\r\n                        <button\r\n                            className=\"border p-1 px-4 border-green-500 bg-green-500 text-white\"\r\n                            onClick={() => multipleImagehandler(\"ADD\")}\r\n                        >\r\n                            <MdOutlinePlaylistAdd size={24} />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        {multipleImages.urls.length > 0 &&\r\n                            multipleImages.urls.map((el, i) => (\r\n                                <div className=\"flex items-center my-1\">\r\n                                    <span className=\" bg-white w-full p-1\">\r\n                                        {el.slice(0, 35)}\r\n                                        {el.length > 35 && \"...\"}\r\n                                    </span>\r\n                                    <button\r\n                                        className=\"p-1 px-4 bg-red-500 text-white\"\r\n                                        onClick={() =>\r\n                                            multipleImagehandler(\"DEL\", i)\r\n                                        }\r\n                                    >\r\n                                        <MdDeleteForever size={24} />\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCreate;\r\n"],"names":["_ref","tag","onClick","_jsxs","className","children","_jsx","IoCloseSharp","size","userInfoReducer","tokenReducer","dispatch","useDispatch","toast","useToast","_useState","useState","_useState2","_slicedToArray","thumbnailImg","setThumbnail","_useState3","_useState4","thumbnailUrl","setThumbnailUrl","_useState5","_useState6","imgOrLink","setImgOrLink","_useState7","urls","files","singleImageUrl","_useState8","multipleImages","setMultipleImages","_useState9","_useState10","catData","setCatData","_useState11","_useState12","categoryIdx","setCategoryIdx","_useState13","_useState14","brandData","setBrandData","_useState15","_useState16","filteredBrandData","setFilteredBrandData","_useState17","_useState18","colorData","setColorData","_useState19","_useState20","vendorData","setVendorData","_useState21","_useState22","productMargin","setProductMargin","_useState23","_useState24","sellingGst","setSellingGst","_useState25","_useState26","brandIdx","setBrandIdx","_useState27","_useState28","tagInputString","setTagInputString","_useState29","_useState30","tags","setTags","_useState31","product_name","sku_code","hsn_code","brandId","color","categoryId","subCatId","stockStatus","lotSizeQty","mrp","seller_price","gst","qty_in_hand","min_order_qty","sole","material","packing_type","made_in","weight","description","_useState32","productField","setProductField","_useState33","colorName","colorHex","color_id","_useState34","selectedColor","setSelectedColor","_useState35","metaTitle","metaKeyword","metaDescription","_useState36","metaData","setMetaData","_useState37","_useState38","vendorid","setVendorid","_useState39","bestSelling","newArrival","_useState40","bestSellingNewArrival","setBestSellingNewArrival","selectProps","useChakraSelectProps","value","onChange","el","x","filter","o","vendor_id","_id","old","margin","options","document","querySelectorAll","i","length","onclick","activeElement","blur","getAllBrands","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","userType","getAllBrandByVendorApi","vendorId","then","res","console","log","data","catch","err","getAllBrandApi","stop","apply","arguments","getAllCategory","_ref3","_callee2","_context2","spinnerOverlayOnFn","getAllCategoryApi","spinnerOverlayOffFn","getAllVendors","_ref4","_callee3","_context3","getAllVentorApi","_step","arr","_iterator","_createForOfIteratorHelper","s","n","done","resD","marginInPercentage","push","label","firmName","e","f","addProductFn","_ref5","_callee4","formData","productKey","_iterator2","_step2","val","_iterator3","_step3","_val","_context4","FormData","append","JSON","stringify","parse","createProductApi","title","position","status","isClosable","response","message","getAllColor","_ref6","_callee5","_context5","getAllColorApi","error","alert","multipleImagehandler","method","index","splice","slice","toLocaleLowerCase","useEffect","type","placeholder","_objectSpread","target","name","id","selectedIndex","map","brand_name","concat","tabIndex","BiChevronDown","style","backgroundColor","category_name","preState","sub_category","subcategory_name","Tag","_toConsumableArray","removeTag","onKeyDown","event","key","disabled","Number","toFixed","_Fragment","window","confirm","Select","htmlFor","checked","defaultChecked","flag","getElementById","click","src","URL","createObjectURL","alt","FaCloudUploadAlt","handleThumbUpload","autoComplete","multiple","MdOutlinePlaylistAdd","MdDeleteForever"],"sourceRoot":""}